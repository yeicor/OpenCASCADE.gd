<?xml version="1.0" encoding="UTF-8" ?>
<class name="ocgd_BRepMesh_IncrementalMesh" inherits="RefCounted" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		Incremental mesh builder for OpenCASCADE shapes.
	</brief_description>
	<description>
		Wrapper class to expose the OpenCASCADE BRepMesh_IncrementalMesh to Godot. Builds the mesh of a shape with respect of their correctly triangulated parts. This class provides incremental meshing functionality for OpenCASCADE shapes, allowing control over mesh quality and parameters.

		The mesh builder uses linear and angular deflection parameters to control the quality of the generated mesh. Linear deflection controls how closely the mesh follows curved surfaces, while angular deflection controls how smoothly curved areas are represented. The meshing can be performed in parallel for better performance on complex shapes.

		This is typically used as a preprocessing step before extracting triangle data for rendering or analysis purposes.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_angular_deflection" qualifiers="const">
			<return type="float" />
			<description>
				Returns meshing parameters - angular deflection.
			</description>
		</method>
		<method name="get_interior_angular_deflection" qualifiers="const">
			<return type="float" />
			<description>
				Returns interior angular deflection.
			</description>
		</method>
		<method name="get_interior_deflection" qualifiers="const">
			<return type="float" />
			<description>
				Returns interior linear deflection.
			</description>
		</method>
		<method name="get_linear_deflection" qualifiers="const">
			<return type="float" />
			<description>
				Returns meshing parameters - linear deflection.
			</description>
		</method>
		<method name="get_min_size" qualifiers="const">
			<return type="float" />
			<description>
				Returns minimum size parameter.
			</description>
		</method>
		<method name="get_parallel_processing" qualifiers="const">
			<return type="bool" />
			<description>
				Returns whether parallel processing is enabled.
			</description>
		</method>
		<method name="get_relative_deflection" qualifiers="const">
			<return type="bool" />
			<description>
				Returns whether relative deflection is used.
			</description>
		</method>
		<method name="get_status_flags" qualifiers="const">
			<return type="int" />
			<description>
				Returns accumulated status flags faced during meshing.
			</description>
		</method>
		<method name="init_with_shape">
			<return type="void" />
			<param index="0" name="shape" type="ocgd_TopoDS_Shape" />
			<param index="1" name="linear_deflection" type="float" />
			<param index="2" name="is_relative" type="bool" default="false" />
			<param index="3" name="angular_deflection" type="float" default="0.5" />
			<param index="4" name="is_in_parallel" type="bool" default="false" />
			<description>
				Constructor. If is_relative is true, deflection used for discretization of each edge will be linear_deflection * size of edge. Deflection used for the faces will be the maximum deflection of their edges. If is_in_parallel is true, shape will be meshed in parallel.
			</description>
		</method>
		<method name="is_modified" qualifiers="const">
			<return type="bool" />
			<description>
				Returns modified flag.
			</description>
		</method>
		<method name="perform">
			<return type="void" />
			<description>
				Performs meshing of the shape.
			</description>
		</method>
		<method name="set_angular_deflection">
			<return type="void" />
			<param index="0" name="deflection" type="float" />
			<description>
				Set angular deflection.
			</description>
		</method>
		<method name="set_interior_angular_deflection">
			<return type="void" />
			<param index="0" name="deflection" type="float" />
			<description>
				Set interior angular deflection.
			</description>
		</method>
		<method name="set_interior_deflection">
			<return type="void" />
			<param index="0" name="deflection" type="float" />
			<description>
				Set interior linear deflection.
			</description>
		</method>
		<method name="set_linear_deflection">
			<return type="void" />
			<param index="0" name="deflection" type="float" />
			<description>
				Set linear deflection.
			</description>
		</method>
		<method name="set_min_size">
			<return type="void" />
			<param index="0" name="min_size" type="float" />
			<description>
				Set minimum size parameter.
			</description>
		</method>
		<method name="set_parallel_processing">
			<return type="void" />
			<param index="0" name="is_parallel" type="bool" />
			<description>
				Set whether to use parallel processing.
			</description>
		</method>
		<method name="set_relative_deflection">
			<return type="void" />
			<param index="0" name="is_relative" type="bool" />
			<description>
				Set whether to use relative deflection.
			</description>
		</method>
	</methods>
</class>
