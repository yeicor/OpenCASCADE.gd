on:
  workflow_call:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  merge_group:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          [ # https://docs.godotengine.org/en/stable/about/system_requirements.html
            { platform: "linux", arch: "x86_64", os: "ubuntu-24.04" },
            { platform: "linux", arch: "x86_32", os: "ubuntu-24.04" },
            { platform: "linux", arch: "arm64", os: "ubuntu-24.04-arm" },
            { platform: "linux", arch: "arm32", os: "ubuntu-24.04-arm" },
            { platform: "windows", arch: "x86_64", os: "windows-2025" },
            { platform: "windows", arch: "x86_32", os: "windows-2025" },
            { platform: "windows", arch: "arm64", os: "windows-2025" },
            { platform: "macos", arch: "arm64", os: "macos-15" },
            { platform: "macos", arch: "x86_64", os: "macos-15" },
            { platform: "web", arch: "wasm32", os: "ubuntu-24.04" },
            { platform: "android", arch: "x86_64", os: "ubuntu-24.04" },
            { platform: "android", arch: "x86_32", os: "ubuntu-24.04" },
            { platform: "android", arch: "arm64", os: "ubuntu-24.04" },
            { platform: "android", arch: "arm32", os: "ubuntu-24.04" },
            { platform: "ios", arch: "arm64", os: "macos-15" },
          ]
        target-type: [ "template_debug" ] # TODO: , "template_release"
        float-precision: [ "single" ] # TODO: , "double"

    runs-on: "${{ matrix.target.os }}"
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      # <Triplet-specific setup>
      - if: "matrix.target.platform == 'linux' && matrix.target.arch == 'x86_32'"
        run: "sudo apt-get update && sudo apt-get install -y gcc-multilib g++-multilib"
      - if: "matrix.target.platform == 'linux' && matrix.target.arch == 'arm32'"
        run: "sudo apt-get update && sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf"
      - if: "matrix.target.os == 'ubuntu-24.04' || matrix.target.os == 'ubuntu-24.04-arm'"
        run: "sudo apt-get update && sudo apt-get install -y libx11-dev libgl1-mesa-dev libfontconfig-dev"
      - if: "matrix.target.platform == 'windows'"
        uses: "egor-tensin/setup-mingw@v2"
        with:
          version: "13.2.0"
      - if: "matrix.target.os == 'macos-15'"
        run: "brew install autoconf automake autoconf-archive"
      - if: "matrix.target.platform == 'web'"
        uses: "mymindstorm/setup-emsdk@v14"
        with:
          version: "4.0.12"
          no-cache: "true"
      - if: "matrix.target.platform == 'web'"
        run: "echo 'LDFLAGS=\"-Wl,-allow-multiple-definition\"' >> $GITHUB_ENV"
      - if: "matrix.target.platform == 'android'"
        uses: "nttld/setup-ndk@v1"
        id: "setup-ndk"
        with:
          ndk-version: "r23c"
          link-to-sdk: true
      - if: "matrix.target.platform == 'android'"
        run: 'echo "ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV'
      # </Triplet-specific setup>

      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.x"
      - shell: "bash"
        run: "python -m pip install scons==4.9.1"

      - uses: "actions/cache/restore@v4"
        id: "scons-cache"
        with:
          key: "scons-${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.float-precision }}-${{ matrix.target-type }}"
          path: "."
      - uses: "actions/cache/restore@v4"
        id: "vcpkg-cache"
        with:
          key: "vcpkg-${{ matrix.target.platform }}-${{ matrix.target.arch }}"
          path: "."

      - run: "scons target=${{ matrix.target-type }} platform=${{ matrix.target.platform }} arch=${{ matrix.target.arch }} precision=${{ matrix.float-precision }}"
        env:
          SCONS_CACHE: "./.scons-cache/"

      - uses: "./godot-cpp/.github/actions/godot-cache-save"
        with:
          scons-cache: "./.scons-cache/"
          cache-name: "${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.float-precision }}_${{ matrix.target-type }}"

      - uses: "actions/cache/save@v4"
        if: "always()"
        with:
          key: "${{ steps.scons-cache.outputs.cache-primary-key }}"
          path: "build\n**/*.o\n**/*.a\n**/*.os**/*.so\n**/*.dylib\n**/*.dll\n**/*.pdb\n**/*.exp\n**/*.lib" # Hopefully simplified to just "build" when out of tree build is implemented.
      - uses: "actions/cache/save@v4"
        if: "always()"
        with:
          key: "${{ steps.vcpkg-cache.outputs.cache-primary-key }}"
          path: "./vcpkg/installed"

      - if: "${{ matrix.target.platform == 'windows' }}"
        shell: "pwsh"
        run: "Remove-Item demo/addons/OpenCASCADE.gd/* -Include *.exp,*.lib,*.pdb -Force"

      - uses: "actions/upload-artifact@v4"
        with:
          name: "OpenCASCADE.gd-${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.float-precision }}-${{ matrix.target-type }}"
          path: "./demo/addons/OpenCASCADE.gd/**"

  merge:
    runs-on: "ubuntu-24.04"
    needs: "build"
    steps:
      - uses: "actions/upload-artifact/merge@v4"
        with:
          name: "OpenCASCADE.gd"
          pattern: "OpenCASCADE.gd-*"
          delete-merged: true