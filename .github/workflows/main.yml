on:
  workflow_call:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  merge_group:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          [ # https://docs.godotengine.org/en/stable/about/system_requirements.html
            { platform: "linux", arch: "x86_64", os: "ubuntu-24.04" },
            { platform: "linux", arch: "x86_32", os: "ubuntu-24.04" },
            { platform: "linux", arch: "arm64", os: "ubuntu-24.04-arm" },
            { platform: "linux", arch: "arm32", os: "ubuntu-24.04-arm" }, // FIXME: <--
            { platform: "windows", arch: "x86_64", os: "windows-2025" },
            { platform: "windows", arch: "x86_32", os: "windows-2025" },
            { platform: "windows", arch: "arm64", os: "windows-2025" },
            { platform: "macos", arch: "universal", os: "macos-15" }, # x86_64 and arm64
            { platform: "web", arch: "wasm32", os: "ubuntu-24.04" },
            { platform: "android", arch: "x86_64", os: "ubuntu-24.04" },
            { platform: "android", arch: "x86_32", os: "ubuntu-24.04" },
            { platform: "android", arch: "arm64", os: "ubuntu-24.04" },
            { platform: "android", arch: "arm32", os: "ubuntu-24.04" }, // FIXME: <--
            { platform: "ios", arch: "arm64", os: "macos-15" },
          ]
        target-type: [ "template_debug" ] # TODO: , "template_release"
        float-precision: [ "single" ] # TODO: , "double"

    runs-on: "${{ matrix.target.os }}"
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      # <Platform/arch-specific setup> (more in setup-godot-cpp)
      - if: "${{ matrix.target.platform == 'linux' && matrix.target.arch == 'x86_32' }}"
        run: "sudo apt-get update && sudo apt-get install -y gcc-multilib g++-multilib"
      - if: "${{ matrix.target.os == 'ubuntu-24.04' || matrix.target.os == 'ubuntu-24.04-arm' }}"
        run: "sudo apt-get update && sudo apt-get install -y libx11-dev libgl1-mesa-dev libfontconfig-dev"
      - if: "${{ matrix.target.os == 'macos-15'}}"
        run: "brew install autoconf automake autoconf-archive"
      # </Platform/arch-specific setup>

      - uses: "./godot-cpp/.github/actions/setup-godot-cpp"
        with:
          platform: "${{ matrix.target.platform }}"

      - uses: "./godot-cpp/.github/actions/godot-cache-restore"
        with:
          scons-cache: "${{ github.workspace }}/.scons-cache/"
          cache-name: "${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.float-precision }}_${{ matrix.target-type }}"

      - uses: "actions/cache@v4"
        with:
          path: "${{ github.workspace }}/vcpkg/installed"
          key: "vcpkg-${{ matrix.target.platform }}-${{ matrix.target.arch }}"

      - run: "scons target=${{ matrix.target-type }} platform=${{ matrix.target.platform }} arch=${{ matrix.target.arch }} precision=${{ matrix.float-precision }}"
        env:
          SCONS_CACHE: "${{ github.workspace }}/.scons-cache/"

      - uses: "./godot-cpp/.github/actions/godot-cache-save"
        with:
          scons-cache: "${{ github.workspace }}/.scons-cache/"
          cache-name: "${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.float-precision }}_${{ matrix.target-type }}"

      - if: "${{ matrix.target.platform == 'windows' }}"
        shell: "pwsh"
        run: "Remove-Item demo/addons/OpenCASCADE.gd/* -Include *.exp,*.lib,*.pdb -Force"

      - uses: "actions/upload-artifact@v4"
        with:
          name: "OpenCASCADE.gd-${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.float-precision }}-${{ matrix.target-type }}"
          path: "${{ github.workspace }}/demo/addons/OpenCASCADE.gd/**"

  merge:
    runs-on: "ubuntu-24.04"
    needs: "build"
    steps:
      - uses: "actions/upload-artifact/merge@v4"
        with:
          name: "OpenCASCADE.gd"
          pattern: "OpenCASCADE.gd-*"
          delete-merged: true